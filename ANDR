import pandas as pd
import os
import numpy as np


df = pd.read_csv('dataset2.csv', 
                       sep='\t', encoding='cp866', index_col = "№ ПП"
                       )

#Задание №2
#1. Указываем, по какому получаетлю мы строим столбцы
#2. Парсим все дело по всем кварталам(план)
#3. Парсим все дело по всем кварталам(факт)
#4. Сравниваем для установления соотношения
#5. Заносим обработанные фактические данные о прибыли в DF
#6. Строим диаграмму

s = df['Получатель ИП ООО']
numberKlient = s.index
klient = s.values
#print(numberKlient)
asoc = {}
n = 4#сколько у нас есть кварталов: всего (0..n)



for i in range(max(numberKlient)):#заплняем ассоциативный массив клиент: номер клиента
    asoc[klient[i]] = numberKlient[i]

        
    
    
klient = 'Альфа'
n = 4#сколько у нас есть кварталов: всего (0..n)
plan = list(0 for i in range(n))
fact = list(0 for i in range(n))
p = 0
f = 0
       
    
def showKlient(klient_name):
    
    plan = list(0 for i in range(n))
    fact = list(0 for i in range(n))
    real = list(0 for i in range(n+1))
    kvartal = list(0 for i in range(n+1))#здесь будут перечислены названия кварталов
    planSUM = 0
    factSUM = 0
    realSUM = 0
    colors = list(0 for i in range(n+1))
    p = 0
    f = 0
    
    if(klient_name=="ALL"):
        for i in range(n*2):
            if(i==0):#решаем проблему с Выручка - Выручка.1
                if((i+1)%2==1):#значит перед нами план
                    plan[p] = sum(df["Выручка"].values)
                    p+=1
                else:#перед нами фактическое значение выручки и значит план мы уже знаем
                    fact[f] = sum(df["Выручка"].values)
                    f+=1
            else:
                for j in range(max(numberKlient)):
                    if(df["Выручка."+str(i)].values[j]=="_"): df["Выручка."+str(i)].values[j] = 0
                    df["Выручка."+str(i)].values[j] = int(df["Выручка."+str(i)].values[j])

                if((i+1)%2==1):#значит перед нами план
                    plan[p] = sum(df["Выручка."+str(i)].values)
                    p+=1
                else:#перед нами фактическое значение выручки и значит план мы уже знаем
                    fact[f] = sum(df["Выручка."+str(i)].values)
                    f+=1
    else:
        k = asoc[klient_name]
        for i in range(n*2):
            if(i==0):#решаем проблему с Выручка - Выручка.1
                if((i+1)%2==1):#значит перед нами план
                    plan[p] = (df["Выручка"][k])
                    p+=1
                else:#перед нами фактическое значение выручки и значит план мы уже знаем
                    fact[f] = (df["Выручка"][k])
                    f+=1
            else:
                if((i+1)%2==1):#значит перед нами план
                    plan[p] = (df["Выручка."+str(i)][k])
                    p+=1
                else:#перед нами фактическое значение выручки и значит план мы уже знаем
                    fact[f] = (df["Выручка."+str(i)][k])
                    f+=1

    #print(plan)
    #print(fact)
    #Считаем кварталы
    #################
    for i in range(n):

        if(fact[i]=='_'): fact[i] = 0
        if(plan[i]=='_'): plan[i] = 1
        if(plan[i]==0):
            plan[i] = 1;
        planSUM+=int(plan[i])
        factSUM+=int(fact[i])

        real[i] = 100*int(fact[i])/int(plan[i])

        kvartal[i] = "Квартал "+str(i)
        if(real[i]>=75):
            colors[i] = "green"
        if(real[i]<75 and real[i]>50):
            colors[i] = "yellow"
        if(real[i]<=50):
            colors[i] = "red"

    #################
    #print(real)

    realSUM = 100*factSUM/planSUM
    #отдельно высчитываем год
    ##################
    if(realSUM==0):
        real[n] = 0.1
    else:
        real[n] = realSUM
    kvartal[n] = "Год"
    if(real[n]>=75):
        colors[n] = "green"
    if(real[n]<75 and real[n]>50):
        colors[n] = "yellow"
    if(real[n]<=50):
        colors[n] = "red"
    ##################
    for i in range(n):
        if(real[i]==0): real[i] = 0.1
    REAL = pd.Series(real,index=kvartal)
    REAL.plot(kind="bar",color=colors, figsize=[10,10],rot=0,ylim=[0,100],title=klient_name,fontsize=15)
